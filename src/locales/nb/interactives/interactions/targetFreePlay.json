{
  "title": "Target Game (Free Play)",
  "publicationStatus": "public",
  "labEnvironment": "production",
  "subtitle": "Steer a charged particle to a target.",
  "category": "",
  "subCategory": "",
  "screenshot": "",
  "aspectRatio": 1.27,
  "fontScale": 0.65,
  "lang": "en-US",
  "i18nMetadata": "",
  "credits": "",
  "helpOnLoad": true,
  "aboutOnLoad": false,
  "about": [
    "Place particles in the game and charge them to guide a positive projectile around obstacles to hit a target. ",
    "You can place any number of charged objects in any location to steer the positive particle to the target. ",
    "View the electric field and the forces on the objects to draw conclusions about how they interact. ",
    "Can you get the charged particle to hit the target?",
    "***",
    "*This simulation was adapted by [the Interactions project](https://concord.org/projects/interactions \"the Interactions Project\") ",
    "with funding from the National Science Foundation (DRL-1232388) in partnership with ",
    "[the CREATE for STEM Institute](http://create4stem.msu.edu/ \"the CREATE for STEM Institute\") at Michigan State University. To learn more, ",
    "[visit the Interactions curriculum collection](https://learn.concord.org/interactions \"visit the Interactions curriculum collection\") in ",
    "which this simulation is embedded.*"
  ],
  "theme": "",
  "showTopBar": true,
  "showBottomBar": true,
  "padding": 10,
  "models": [
    {
      "type": "md2d",
      "id": "level1",
      "url": "models-converted/lab-version/1/md2d/interactions/target-game-free-play/targetFreePlay$0.json",
      "importedFrom": "imports/legacy-mw-content/interactions/target-game-free-play/targetFreePlay$0.mml",
      "onLoad": [
        "setShapeProperties(3, {lineColor: 'rgb(255,0,0)', lineWeight: 7});",
        "set('atomTraceColor','yellow');",
        "var timeStepsPerTick = get('timeStepsPerTick'),",
        "    collisionPadding = 0.075;",
        "onClick('background', function(x, y, d, i) {",
        "  if (get('chargeSign') !== -99) {",
        "    if( addAtom({x: x, y: y, charge: get('chargeSign')*get('chargeMagnitude'), pinned: true}) ) {",
        "      get('atomIndices').push( getNumberOfAtoms()-1 );",
        "      get('atomOriginalSign').push( get('chargeSign') );",
        "    }",
        "  }",
        "});",
        "callEvery(timeStepsPerTick, function() {",
        "  var target = getShapeProperties(2);",
        "  if (atomsWithinRect(target.x, target.y, target.width, target.height).length > 0) {",
        "    alert('Congratulations! You hit the target.');",
        "    stop();",
        "  }",
        "  for (var i = 0; i < 7; i++) {",
        "    target = getObstacleProperties(i);",
        "    if (atomsWithinRect(target.x - collisionPadding, target.y - collisionPadding, target.width + 2*collisionPadding, target.height + 2*collisionPadding).length > 0) {",
        "      if (get('error-triggered') == false) {",
        "        alert('You hit a barrier. Try again.');",
        "        set('error-triggered',true);",
        "      }",
        "      stop();",
        "    }",
        "  }",
        "});"
      ],
      "viewOptions": {
        "controlButtons": "",
        "enableKeyboardHandlers": false,
        "electricFieldDensity": 24,
        "electricFieldColor": "rgb(0,255,0)",
        "forceVectors": {
          "length": 30
        }
      }
    },
    {
      "type": "md2d",
      "id": "level2",
      "url": "models-converted/lab-version/1/md2d/interactions/target-game-free-play/level2FreePlay$0.json",
      "importedFrom": "imports/legacy-mw-content/interactions/target-game-free-play/level2FreePlay$0.mml",
      "onLoad": [
        "setShapeProperties(3, {lineColor: 'rgb(255,0,0)', lineWeight: 7});",
        "set('atomTraceColor','yellow');",
        "var timeStepsPerTick = get('timeStepsPerTick'),",
        "    collisionPadding = 0.075;",
        "onClick('background', function(x, y, d, i) {",
        "  if( addAtom({x: x, y: y, charge: get('chargeSign')*get('chargeMagnitude'), pinned: true}) ) {",
        "    get('atomIndices').push( getNumberOfAtoms()-1 );",
        "    get('atomOriginalSign').push( get('chargeSign') );",
        "  }",
        "});",
        "callEvery(timeStepsPerTick, function() {",
        "  var target = getShapeProperties(2);",
        "  if (atomsWithinRect(target.x, target.y, target.width, target.height).length > 0) {",
        "    alert('Congratulations! You hit the target.');",
        "    stop();",
        "  }",
        "  for (var i = 0; i < 9; i++) {",
        "    target = getObstacleProperties(i);",
        "    if (atomsWithinRect(target.x - collisionPadding, target.y - collisionPadding, target.width + 2*collisionPadding, target.height + 2*collisionPadding).length > 0) {",
        "      if (get('error-triggered') == false) {",
        "        alert('You hit a barrier. Try again.');",
        "        set('error-triggered',true);",
        "      }",
        "      stop();",
        "    }",
        "  }",
        "});",
        "start();"
      ],
      "viewOptions": {
        "controlButtons": "",
        "electricFieldDensity": 24,
        "electricFieldColor": "rgb(0,255,0)",
        "forceVectors": {
          "length": 30
        }
      }
    }
  ],
  "propertiesToRetain": [],
  "parameters": [
    {
      "name": "chargeSign",
      "initialValue": 1,
      "onChange": [
        "if (value === -99) {",
        "   onClick('atom', function(x, y, d, i) {",
        "     removeAtom(i);",
        "   });",
        "}",
        "else {",
        "   onClick('atom', function () {});",
        "}"
      ]
    },
    {
      "name": "atomOriginalSign",
      "initialValue": []
    },
    {
      "name": "atomIndices",
      "initialValue": []
    },
    {
      "name": "chargeMagnitude",
      "initialValue": 1,
      "onChange": [
        "batch( function() {",
        "  var prop,",
        "      indices = get('atomIndices'),",
        "      sign = get('atomOriginalSign');",
        "  for( var j, i = 0; i < indices.length; i++ ) {",
        "    j = indices[i];",
        "    prop = getAtomProperties(j);",
        "    setAtomProperties(i, {charge: sign[j] * get('chargeMagnitude')});",
        "  }",
        "});"
      ]
    },
    {
      "name": "error-triggered",
      "initialValue": false
    }
  ],
  "outputs": [],
  "filteredOutputs": [],
  "helpTips": [
    {
      "component": "",
      "text": [
        "The goal of this game is to guide a positive particle to the target using other charged objects."
      ],
      "showcase": true
    },
    {
      "component": "select-add-atom-type",
      "text": [
        "Select *Add negative* or *Add positive* to add charged objects to the game board. You can ",
        "drag charged objects around the board, or select *Delete object* and click ",
        "on a charged object to remove it."
      ],
      "showcase": true
    },
    {
      "component": "try-again",
      "text": "Use *Try again* to keep objects for another try.",
      "showcase": true
    },
    {
      "component": "reset",
      "text": "Use *Reset* to remove all charged objects and reset controls.",
      "showcase": true
    }
  ],
  "dataSets": [],
  "components": [
    {
      "id": "add-atom",
      "type": "button",
      "action": [
        "var idx = atomsWithinRect(0,0,get('width'),get('height'),1);",
        "if (idx.length > 0) {",
        "  untraceAtom(idx[0]);",
        "  removeAtom(idx[0]);",
        "}",
        "addAtom( {x: 0.62, y: 2, element: 1, vx: 0.0025, vy: 0, charge: 1});",
        "idx = atomsWithinRect(0,0,get('width'),get('height'),1);",
        "start();",
        "traceAtom(idx[0]);"
      ],
      "text": "Launch a positive particle",
      "width": "",
      "height": "",
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "reset",
      "type": "button",
      "action": "reloadModel();",
      "text": "Reset",
      "width": "",
      "height": "",
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "try-again",
      "type": "button",
      "action": [
        "var idx = atomsWithinRect(0,0,get('width'),get('height'),1);",
        "if (idx.length > 0) {",
        "  untraceAtom(idx[0]);",
        "  removeAtom(idx[0]);",
        "}"
      ],
      "text": "Try again",
      "width": "",
      "height": "",
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "select-show-force-vectors",
      "type": "checkbox",
      "text": "Show force on objects",
      "textOn": "right",
      "width": "auto",
      "height": "auto",
      "property": "showForceVectors",
      "retainProperty": true,
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "select-show-electric-field",
      "type": "checkbox",
      "text": "Show electric field",
      "textOn": "right",
      "width": "auto",
      "height": "auto",
      "property": "showElectricField",
      "retainProperty": true,
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "select-add-atom-type",
      "type": "radio",
      "style": "radio",
      "orientation": "horizontal",
      "label": "",
      "labelOn": "top",
      "options": [
        {
          "text": "Add negative",
          "value": -1
        },
        {
          "text": "Add positive",
          "value": 1
        },
        {
          "text": "Delete object",
          "value": -99
        }
      ],
      "property": "chargeSign",
      "retainProperty": true,
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "select-level",
      "type": "radio",
      "style": "radio",
      "orientation": "horizontal",
      "label": "",
      "labelOn": "top",
      "options": [
        {
          "text": "Level 1",
          "action": "loadModel('level1');",
          "selected": true
        },
        {
          "text": "Level 2",
          "action": "loadModel('level2');"
        }
      ],
      "retainProperty": true,
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "select-charge-magnitude",
      "type": "slider",
      "min": 0,
      "max": 5,
      "steps": 10,
      "title": "",
      "titlePosition": "top",
      "labels": [
        {
          "value": 1,
          "label": "-/+ 1"
        },
        {
          "value": 5,
          "label": "-/+ 5"
        },
        {
          "value": 3,
          "label": "-/+ 3"
        }
      ],
      "width": "auto",
      "height": "auto",
      "displayValue": "return format('0.1f')(value)",
      "property": "chargeMagnitude",
      "retainProperty": true,
      "disabled": false,
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "label-charge-place-toggle",
      "type": "text",
      "text": "**Click in game to:**",
      "width": "auto",
      "height": "auto",
      "tooltip": "",
      "helpIcon": false
    },
    {
      "id": "label-select-placed-object-charge",
      "type": "text",
      "text": "**Set charge amount on placed objects:**",
      "width": "auto",
      "height": "auto",
      "tooltip": "",
      "helpIcon": false
    }
  ],
  "layout": {
    "bottom": [
      [
        "label-charge-place-toggle",
        "select-add-atom-type"
      ],
      [
        "add-atom",
        "try-again",
        "select-level",
        "reset"
      ],
      [
        "label-select-placed-object-charge",
        "select-charge-magnitude"
      ],
      [
        "select-show-electric-field",
        "select-show-force-vectors"
      ]
    ]
  },
  "template": [
    {
      "id": "bottom",
      "top": "model.bottom",
      "width": "model.width",
      "left": "model.left",
      "align": "center"
    }
  ]
}
