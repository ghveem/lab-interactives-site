{
  "title": "The distance between charges matters",
  "publicationStatus": "draft",
  "subtitle": "Can you manipulate the position of charged particles to steer another object to a target?",
  "aspectRatio": 1.725,
  "fontScale": 0.8,
  "about": [
    "Use the *Shoot an electron* button to shoot an electron particle across the game board.",
    "Adjust the position of the positively charged object to steer the moving particle to either target."
  ],
  "models": [
    {
      "type": "md2d",
      "id": "page4$0",
      "url": "models-converted/lab-version/1/md2d/itsi/electrostatics/page4$0.json",
      "importedFrom": "imports/legacy-mw-content/itsi/electrostatics/page4$0.mml",
      "viewOptions": {
        "controlButtons": ""
      },
      "onLoad": [
        "setAtomProperties(0, {draggable: false});",
        "set('atomTraceColor', 'black');",
        "var wonText  = {text: 'You win!'},",
        "    lostText = {text: 'Target missed!'};",
        "onDrag('atom', function (x, y, d, i) {",
        "  if (i === 0) {",
        "    y = Math.max(0.3, Math.min(3.3, y));",
        "    x = 2.5;",
        "    setAtomProperties(i, {x: x, y: y});",
        "  }",
        "});",
        "var timePerTick = get('timePerTick');",
        "callEvery(timePerTick, function() {",
        "  var target1 = getShapeProperties(0),",
        "      target2 = getShapeProperties(1),",
        "      back    = getShapeProperties(2),",
        "      won = false, lost = false;",
        "  if (atomsWithinRect(target1.x, target1.y, target1.width, target1.height).length > 0 || atomsWithinRect(target2.x, target2.y, target2.width, target2.height).length > 0) {",
        "    won = true",
        "  } else if (atomsWithinRect(0,0,get('width'),0.05).length > 0 || atomsWithinRect(0,get('height')-0.05,get('width'),0.05).length > 0) {",
        "    lost = true;",
        "  } else if (atomsWithinRect(back.x, back.y, back.width, back.height).length > 0) {",
        "    lost = true;",
        "  }",
        "  if (won || lost) {",
        "    stop();",
        "    setTextBoxProperties(11, (won ? wonText : lostText) );",
        "  }",
        "});"
      ]
    }
  ],
  "components": [
    {
      "type": "button",
      "id": "shoot-electron",
      "text": "Shoot an electron",
      "width": "11em",
      "action": [
        "setTextBoxProperties(11, {text: ''});",
        "if (getNumberOfAtoms() > 1) {",
        "  untraceAtom(getNumberOfAtoms()-1);",
        "  removeAtom(getNumberOfAtoms()-1);",
        "}",
        "addAtom( {x: getShapeProperties(4).x + getShapeProperties(4).width, y: get('height')/2, element: 1, vx: 0.0010, vy: 0, charge: -1});",
        "traceAtom( getNumberOfAtoms() - 1 );",
        "start();"
      ]
    }
  ],
  "layout": {
    "right": ["shoot-electron"]
  },
  "template": [
    {
      "id": "right",
      "top": "model.top + model.height*0.45",
      "width": "11em",
      "left": "model.right",
      "height": "10em",
      "padding-left": "1em",
      "align": "center"
    }
  ]
}
