{
  "title": "Batched Signal Generator",
  "publicationStatus": "draft",
  "subtitle": "Testing the one sample per tick assumption with batched input",
  "about": "",
  "models": [
    {
      "type": "signal-generator",
      "id": "signal1",
      "url": "models/lab-version/1/signal-generator/signal-generator.json",
      "viewOptions": {
        "controlButtons": "play_reset",
        "showClock": true
      },
      "modelOptions": {
        "modelSampleRate": 20,
        "sampleBatchLength": 60
      }
    }
  ],
  "parameters": [
    {
      "name": "logFrequency",
      "onChange": "set('frequency', Math.pow(10, value));",
      "initialValue": 0
    },
    {
      "name": "batchSize",
      "onChange": "set('sampleBatchLength', Math.round(value * get('modelSampleRate')));",
      "initialValue": 2
    }
  ],
  "components": [
    {
      "type": "graph",
      "id": "propertiesGraph",
      "title": "Signal",
      "xlabel": "Time (s)",
      "ylabel": "Signal",
      "ymin": -1.2,
      "ymax": 1.2,
      "xmax": 10,
      "xTickCount": 5,
      "xFormatter": ".2s",
      "yFormatter": ".2s",
      "properties": [
        "signalValue"
      ]
    },
    {
      "type": "slider",
      "id": "frequency-slider",
      "title": "Frequency (Hz)",
      "min": -1,
      "max": 1,
      "steps": 10,
      "property": "logFrequency",
      "displayValue": "return format('.1f')(Math.pow(10, value))",
      "labels": [
        {
          "value": -1,
          "label": "0.1"
        },
        {
          "value": 1,
          "label": "10"
        }
      ]
    },
    {
      "type": "slider",
      "id": "batch-size-slider",
      "title": "Batch Size (s)",
      "min": 0.05,
      "max": 5,
      "steps": 99,
      "property": "batchSize",
      "displayValue": "return format('.2f')(value)",
      "labels": [
        {
          "value": 0.05,
          "label": "0.05"
        },
        {
          "value": 5,
          "label": "5"
        }
      ]
    },
    {
      "type": "numericOutput",
      "id": "angle-output",
      "property": "angle",
      "displayValue": "return format('.1f')(value)"
    }
  ],
  "layout": {
    "below-model": [
      "propertiesGraph"
    ]
  },
  "template": [
    {
      "id": "below-model",
      "top": "model.bottom",
      "width": "model.width",
      "height": "0.7 * model.width"
    },
    {
      "id": "container-bottom",
      "top": "below-model.bottom",
      "width": "model.width"
    }
  ]
}